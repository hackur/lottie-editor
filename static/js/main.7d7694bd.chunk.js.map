{"version":3,"sources":["editor.js","App.js","serviceWorker.js","store.js","index.js"],"names":["newShapeGroupKeyHash","toRGBADecimal","arr","map","v","i","Math","round","toRGBADecimalGradient","generateNewKeyHash","val","XXH","h32","toString","findItemPath","items","path","forEach","item","it","length","colorObj","itemPath","push","itemName","nm","concat","ty","c","a","color","k","type","keyFramed","colors","startColor","s","endColor","e","time","t","start","end","index","g","extractColors","layers","rootLayersName","assetsIndex","shapes","layerId","layerName","shapeId","shapeName","parseColors","jsn","file","parsed","JSON","parse","join","rootItemName","split","trim","key","hasOwnProperty","assets","asset","setGradientKValue","new_color","startIndex","j","count","getLastkeyFramedColor","obj","assignNewGradientColor","json","colorProps","newColor","pickedColor","parseInt","pathAndId","colorPath","x","traverseItemsAndSetKeyedGradient","color_path_len","colorType","oldColorIndex","gradientStartIndex","toBeHashed","traverseItemsAndSetGradient","animation","assignNewSolidColor","traverseItemsAndSetKeyedSolid","traverseItemsAndSetSolid","ReactGA","initialize","pageview","window","location","pathname","search","sketchPickerStyles","default","picker","boxShadow","width","undoStack","redoStack","initAnimation","initState","Editor","state","data","parsedColors","colorPickerBackground","current_layer","rootLayerPath","layer_open","activeGroupId","keyFramedColorType","keyFramedColorIndex","isGradient","gradientIndex","currentFrameTime","totalTime","paused","animationPreviewBackgroundColor","backgroundColorPickerVisible","currentView","fetchError","setColors","toJS","props","Store","setState","toggleLayer","id","changeColor","event","rgb","r","b","newData","oldStateData","shift","setJson","lottieRender","setActiveColorKeyedSolids","setActiveColorSolids","shapeGroupId","setActiveColorKeyedGradient","gradient","setActiveColorGradient","gradientColorI","gradientColorIndex","updateCurrentFrame","currentTime","keyboardControls","keyCode","playPause","seekByArrowKeys","ctrlKey","undo","redo","seekByMouseClick","lottie","goToAndStop","play","currentFrame","playButtonState","clearAllChanges","prevAnimation","pop","current","toggleBackgroundColorPicker","hideBackgroundColorPicker","wrapperRef","contains","target","setWrapperRef","node","initDemo","loadNewAnimation","parseAndLoadNewAnimation","newAnimation","result","handleFileDrop","files","reader","FileReader","onload","readAsText","downloadFile","blob","Blob","stringify","saveAs","switchEditMode","buildKeyedSolidsList","style","background","padding","borderBottom","borderTop","size","onClick","fontSize","marginLeft","buildKeyedGradientListColorList","color_type","gradient_colors","gradients","groupGradient","buildKeyedGradientList","last","buildGradientList","buildSolidsList","buildShapesList","layer","Object","keys","filter","className","renderParsedColors","reverse","autoHide","autoHideTimeout","autoHideDuration","destroy","loadAnimation","container","document","getElementById","renderer","loop","autoplay","animationData","addEventListener","showFetchError","this","url","URLSearchParams","get","demo","fetch","then","resp","text","body","res","err","catch","removeEventListener","hex","ref","onChange","changeBackgroundColor","animationRef","onChangeComplete","styles","href","FileDrop","onDrop","renderAnimation","title","track","active","backgroundColor","y","xmax","backgroundColorPicker","React","Component","LottieEditor","inject","observer","Boolean","hostname","match","configure","enforceActions","decorate","observable","action","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d7694bd.chunk.js","sourcesContent":["import XXH from 'xxhashjs'\r\n\r\nlet newShapeGroupKeyHash = null\r\n\r\nconst toRGBADecimal = (arr) => arr.map((v,i)=>i!=3 && arr[3] != 0 ?Math.round(v*255):v)\r\nconst toRGBADecimalGradient = (arr) => {\r\n\treturn arr.map((v,i)=> {\r\n\t\tif(i != 0 && v % 4 == 0){ \r\n\t\t\treturn v\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn Math.round(v*255)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nconst generateNewKeyHash = (val) => {\r\n\treturn XXH.h32(val, 0xABCD ).toString(16)\r\n}\r\n\r\nconst findItemPath = (items) => {\r\n\t\r\n\tlet path = []\r\n\t\r\n\titems.forEach((item,i) => {\r\n\t\t\r\n\t\tif('it' in item){\r\n\t\t\tlet items = findItemPath(item.it)\r\n\t\t\t\r\n\t\t\tif(items.length > 0) {\r\n\t\t\t\titems = items.map(colorObj => {\r\n\t\t\t\t\tcolorObj.itemPath.push(i)\r\n\t\t\t\t\tcolorObj.itemName = 'nm' in item ? item.nm +' -> '+ colorObj.itemName: 'Item ' +i+ ' -> '+ colorObj.itemName\r\n\t\t\t\t\treturn colorObj\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tpath = path.concat(items)\r\n\t\t}\r\n\t\telse if(item.ty == 'fl' || item.ty == 'st'){ //solid fill || stroke\r\n\t\t\t\r\n\t\t\tconst itemName = 'nm' in item ? item.nm: item.ty == 'fl' ? 'Fill 1': 'Stroke 1'\r\n\t\t\tif(item.c.a == 0){\r\n\t\t\t\tconst color = toRGBADecimal(item.c.k)\r\n\t\t\t\tpath.push({type:item.ty,itemName:itemName, itemPath:[i], color:color, keyFramed:false})\r\n\t\t\t}\r\n\t\t\telse if(item.c.a == 1){ //color has keyframes\r\n\t\t\t\tlet colors = []\r\n\t\t\t\titem.c.k.forEach((v,i) => {\r\n\t\t\t\t\tif('s' in v){\r\n\t\t\t\t\t\tconst startColor = toRGBADecimal(v.s)\r\n\t\t\t\t\t\t//some json files don't have end color property, use 255 as a filler--not used for anything \r\n\t\t\t\t\t\t//just allows the hash value to be start + end color\r\n\t\t\t\t\t\tconst endColor =   'e' in v ? toRGBADecimal(v.e):[255,255,255,0] \r\n\t\t\t\t\t\tcolors.push({time:v.t,start:startColor,end:endColor,index:i})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tpath.push({ type:item.ty,itemName:itemName, itemPath:[i],color:colors,keyFramed:true})\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(item.ty == 'gf' || item.ty == 'gs'){ //gradient fill/stroke\r\n\t\t\tconst itemName = 'nm' in item ? item.nm: item.ty == 'gf' ? 'Gradient Fill 1': 'Gradient Stroke 1'\r\n\t\t\tif(item.g.k.a == 0){\r\n\t\t\t\tconst color = toRGBADecimalGradient(item.g.k.k)\r\n\t\t\t\tpath.push({type:item.ty,itemName:itemName, itemPath:[i], color:color, keyFramed:false})\r\n\t\t\t}\r\n\t\t\telse if(item.g.k.a == 1){ //gradient has keyframes\r\n\t\t\t\tlet colors = []\r\n\t\t\t\titem.g.k.k.forEach((v,i) => {\r\n\t\t\t\t\tif('s' in v && 'e' in v){\r\n\t\t\t\t\t\tconst startColor = toRGBADecimalGradient(v.s)\r\n\t\t\t\t\t\tconst endColor =   toRGBADecimalGradient(v.e)\r\n\t\t\t\t\t\tcolors.push({time:v.t,start:startColor,end:endColor,index:i})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tpath.push({ type:item.ty,itemName:itemName, itemPath:[i], keyFramed:true,color:colors})\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\treturn path\r\n}\r\n\r\n\r\nconst extractColors = (layers,rootLayersName,assetsIndex = null) => {\r\n\tlet colors = []\r\n\t\r\n\tlayers.forEach((v,i) => {\r\n\t\tif('layers' in v){ //layer embededded in layer\r\n\t\t\t//todo\r\n\t\t}\r\n\t\telse if(\"shapes\" in v){\r\n\t\t\tlet shapes = extractColors(v.shapes,rootLayersName,assetsIndex).map((val) => {\r\n\t\t\t\tval.layerId = rootLayersName +':'+ i + ':'+assetsIndex\r\n\t\t\t\tval.layerName = v.nm\r\n\t\t\t\treturn val\r\n\t\t\t})\r\n\t\t\tcolors = colors.concat(shapes)\r\n\t\t\t\r\n\t\t}\r\n\t\telse if(\"it\" in v) {\r\n\t\t\tlet items = findItemPath(v.it).map((val) =>{\r\n\t\t\t\tval.shapeId = i\r\n\t\t\t\tval.shapeName = v.nm\r\n\t\t\t\t\r\n\t\t\t\treturn val\r\n\t\t\t})\r\n\t\t\tcolors = colors.concat(items)\r\n\t\t}\r\n\t\t\r\n\t})\r\n\treturn colors\r\n}\r\n\r\n\r\nconst parseColors = (jsn, file=false) => {\r\n\t\r\n\tlet parsed = file ? jsn: JSON.parse(jsn)\r\n\t\r\n\tlet layers = {}\r\n\r\n\textractColors(parsed.layers,'main').forEach((colorObj,i) => {\r\n\t\tlet color = colorObj.keyFramed ? colorObj.color[colorObj.color.length - 1].start.join()+colorObj.color[colorObj.color.length - 1].end.join(): colorObj.color.join()\r\n\t\tlet rootItemName = colorObj.itemName.split('->')[0].trim()\r\n\t\tlet key = generateNewKeyHash(rootItemName+':'+color)\r\n\t\tlet layerId = colorObj.layerId.toString()\r\n\r\n\t\tif(layers.hasOwnProperty(layerId)){\r\n\t\t\tif( key in layers[layerId]){\r\n\t\t\t\tlayers[layerId][key].push(colorObj)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tlayers[layerId][key] = [colorObj.shapeName,colorObj]\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tlayers[layerId] = {[key]:[colorObj.shapeName,colorObj],layerName:colorObj.layerName}\r\n\t\t}\r\n\t})\r\n\t\r\n\tif(parsed.assets.length != 0){\r\n\t\tparsed.assets.forEach((asset,i) => {\r\n\t\t\tif('layers' in asset){\r\n\t\t\t\textractColors(asset.layers,'assets',i).forEach((colorObj,i) =>{\r\n\t\t\t\t\tlet color = colorObj.keyFramed ? colorObj.color[colorObj.color.length - 1].start.join()+colorObj.color[colorObj.color.length - 1].end.join(): colorObj.color.join()\r\n\t\t\t\t\tlet rootItemName = colorObj.itemName.split('->')[0].trim()\r\n\t\t\t\t\tlet key = generateNewKeyHash(rootItemName+':'+color)\r\n\t\t\t\t\tlet layerId = colorObj.layerId.toString()\r\n\t\t\r\n\t\t\t\t\tif(layers.hasOwnProperty(layerId)){\r\n\t\t\t\t\t\tif( key in layers[layerId]){\r\n\t\t\t\t\t\t\tlayers[layerId][key].push(colorObj)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tlayers[layerId][key] = [colorObj.shapeName,colorObj]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlayers[layerId] = {[key]:[colorObj.shapeName,colorObj],layerName:colorObj.layerName}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\treturn layers\r\n}\r\nconst setGradientKValue = (k,new_color,startIndex) => {\r\n\tlet i = startIndex*4\r\n\tlet j = 0\r\n\tlet count = 3 \r\n\t\r\n\twhile(count > 0){\r\n\t\tk[i] = new_color[j]\r\n\t\ti++\r\n\t\tj++\r\n\t\tcount--\r\n\t}\t\r\n}\r\nconst getLastkeyFramedColor = (k,type) => {\r\n\tlet colors = []\r\n\tk.forEach((obj,i)=>{\r\n\t\tconst end = 'e' in obj ? obj.e: [255,255,255,0] //<----missing end color placeholder\r\n\t\tcolors.push({time:obj.t,start:obj.s,end:end,index:i})\r\n\t})\r\n\t//s:start,e:end\r\n\tconst s = colors[colors.length - 1].start\r\n\tconst e = colors[colors.length - 1].end\r\n\r\n\treturn  type ==\"solid\"? toRGBADecimal(s) + toRGBADecimal(e):toRGBADecimalGradient(s)+toRGBADecimalGradient(e)\r\n\t\r\n}\r\n\r\nconst traverseItemsAndSetKeyedSolid = (json,colorProps,color_path_len) => {\r\n\tlet i = colorProps.colorPath[color_path_len-1]\r\n\tif(color_path_len  > 0){\r\n\t\ttraverseItemsAndSetKeyedSolid(json.it[i],colorProps,color_path_len-1)\r\n\t}\r\n\telse{\r\n\t\tif(colorProps.colorType == 'start'){\r\n\t\t\tlet k = json.c.k[colorProps.oldColorIndex]\r\n\t\t\tif('s' in k) k.s = colorProps.newColor\r\n\t\t}\r\n\t\telse if(colorProps.colorType == 'end'){\r\n\t\t\tlet k = json.c.k[colorProps.oldColorIndex]\r\n\t\t\tif('e' in k) k.e = colorProps.newColor\r\n\t\t}\r\n\t\tlet toBeHashed = getLastkeyFramedColor(json.c.k,'solid')\r\n\t\tnewShapeGroupKeyHash =  generateNewKeyHash(colorProps.rootItemName+':'+toBeHashed)\r\n\t}\r\n}\r\n\r\nconst traverseItemsAndSetKeyedGradient = (json,colorProps,color_path_len) => {\r\n\tlet i = colorProps.colorPath[color_path_len-1]\r\n\tif(color_path_len  > 0){\r\n\t\ttraverseItemsAndSetKeyedGradient(json.it[i],colorProps,color_path_len-1)\r\n\t}\r\n\telse{\r\n\t\tif(colorProps.colorType == 'start') setGradientKValue(json.g.k.k[colorProps.oldColorIndex].s,colorProps.newColor,colorProps.gradientStartIndex)\r\n\t\telse if(colorProps.colorType == 'end') setGradientKValue(json.g.k.k[colorProps.oldColorIndex].e,colorProps.newColor,colorProps.gradientStartIndex)\r\n\t\tlet toBeHashed = getLastkeyFramedColor(json.g.k.k,'gradient')\r\n\t\tnewShapeGroupKeyHash =  generateNewKeyHash(colorProps.rootItemName+':'+toBeHashed)\r\n\t}\r\n}\r\n\r\nconst traverseItemsAndSetGradient = (json,colorProps,color_path_len) => {\r\n\tlet i = colorProps.colorPath[color_path_len-1]\r\n\tif(color_path_len  > 0){\r\n\t\ttraverseItemsAndSetGradient(json.it[i],colorProps,color_path_len-1)\r\n\t}\r\n\telse{\r\n\t\tsetGradientKValue(json.g.k.k,colorProps.newColor,colorProps.gradientStartIndex)\r\n\t\tnewShapeGroupKeyHash = generateNewKeyHash(colorProps.rootItemName+':'+toRGBADecimalGradient(json.g.k.k))\r\n\t}\r\n}\r\n\r\nconst traverseItemsAndSetSolid = (json,colorProps,color_path_len) => {\r\n\tlet i = colorProps.colorPath[color_path_len-1]\r\n\tif(color_path_len  > 0){\r\n\t\ttraverseItemsAndSetSolid(json.it[i],colorProps,color_path_len-1)\r\n\t}\r\n\telse{\r\n\t\tjson.c.k = colorProps.newColor\r\n\t\tnewShapeGroupKeyHash = generateNewKeyHash(colorProps.rootItemName+':'+toRGBADecimal(json.c.k))\r\n\r\n\t}\r\n}\r\n\r\n\r\n\r\nconst assignNewGradientColor = (json,colorProps) => {\r\n\tcolorProps.newColor = colorProps.pickedColor.map((v,i)=> i!=3? parseInt(v)*1.0/255:v)\r\n\tcolorProps.items.forEach((v,i) => {\r\n\t\tif(i != 0){\r\n\t\t\tconst {itemName,itemPath,shapeId,layerId} = v\r\n\t\t\tconst pathAndId = layerId.split(':')\r\n\r\n\t\t\tcolorProps.rootItemName = itemName.split('->')[0].trim()\r\n\t\t\tcolorProps.colorPath = v.itemPath\r\n\r\n\t\t\tlet x = pathAndId[0] == \"main\" ? json.layers[pathAndId[1]].shapes[shapeId]: json.assets[pathAndId[2]].layers[pathAndId[1]].shapes[shapeId]\r\n\t\t\t\tif(colorProps.type == \"keyed\"){\r\n\t\t\t\t\ttraverseItemsAndSetKeyedGradient(\r\n\t\t\t\t\t\tx,\r\n\t\t\t\t\t\tcolorProps,\r\n\t\t\t\t\t\titemPath.length\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttraverseItemsAndSetGradient(\r\n\t\t\t\t\t\tx,\r\n\t\t\t\t\t\tcolorProps,\r\n\t\t\t\t\t\titemPath.length\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\r\n\t})\r\n\r\n\tconst parsed = parseColors(json,true)\r\n\treturn {animation:json,colors:parsed,key:newShapeGroupKeyHash}\r\n\r\n\t\r\n}\r\n\r\nconst assignNewSolidColor = (json,colorProps) => {\r\n\tcolorProps.newColor = colorProps.pickedColor.map((v,i)=> i!=3? parseInt(v)*1.0/255:v)\r\n\tcolorProps.items.forEach((v,i) => {\r\n\t\tif(i != 0){\r\n\t\t\tconst {itemName,itemPath,shapeId,layerId} = v\r\n\t\t\tconst pathAndId = layerId.split(':')\r\n\r\n\t\t\tcolorProps.rootItemName = itemName.split('->')[0].trim()\r\n\t\t\tcolorProps.colorPath = v.itemPath\r\n\r\n\t\t\tlet x = pathAndId[0] == \"main\" ? json.layers[pathAndId[1]].shapes[shapeId]: json.assets[pathAndId[2]].layers[pathAndId[1]].shapes[shapeId]\r\n\t\t\t\tif(colorProps.type == \"keyed\"){\r\n\t\t\t\t\ttraverseItemsAndSetKeyedSolid(\r\n\t\t\t\t\t\tx,\r\n\t\t\t\t\t\tcolorProps,\r\n\t\t\t\t\t\titemPath.length\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttraverseItemsAndSetSolid(\r\n\t\t\t\t\t\tx,\r\n\t\t\t\t\t\tcolorProps,\r\n\t\t\t\t\t\titemPath.length\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t})\r\n\r\n\tconst parsed = parseColors(json,true)\r\n\treturn {animation:json,colors:parsed,key:newShapeGroupKeyHash}\r\n\r\n\t\r\n}\r\n\r\n\r\n\r\nexport {\r\n\tparseColors,\r\n\tassignNewSolidColor,\r\n\tassignNewGradientColor\r\n}\r\n","import React from 'react';\nimport './assets/css/style.css';\nimport {ChromePicker} from 'react-color';\nimport lottie from 'lottie-web'\nimport {parseColors, assignNewSolidColor, assignNewGradientColor} from './editor'\nimport {MdVpnKey, MdKeyboardArrowDown, MdPlayArrow, MdUndo, MdRedo, MdFileDownload, MdClearAll, MdPause, MdEdit} from 'react-icons/md'\nimport {FaGithub} from 'react-icons/fa'\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Slider from 'react-input-slider'\nimport FileDrop from 'react-file-drop'\nimport {saveAs} from 'file-saver'\nimport ReactGA from 'react-ga';\nimport {inject, observer} from 'mobx-react'\nimport {toJS, computed} from 'mobx'\n\n//google analytics\nReactGA.initialize('UA-139548848-2');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nconst sketchPickerStyles = {\n  default: {\n    picker: { // See the individual picker source for which keys to use\n      boxShadow: 'none',\n      //padding:0\n      width:'100%',\n     \n    },\n  },\n}\n//support undo/redo\nlet undoStack = []\nlet redoStack = []\nlet initAnimation = null\nlet initState = {}\n\nclass Editor extends React.Component {\n  state = {\n    data: null,\n    parsedColors:null,\n   \n    colorPickerBackground: [0,0,0,1],\n    \n    current_layer: null,\n    rootLayerPath:null,\n    rootItemName:null,\n    layer_open:false,\n    activeGroupId:null,\n\n    keyFramed:false,\n    keyFramedColorType:null,\n    keyFramedColorIndex:null,\n\n    isGradient:false,\n    gradientIndex:null,\n   \n    currentFrameTime:0,\n    totalTime:0,\n    paused:false,\n\n    animationPreviewBackgroundColor:'#fff',\n    backgroundColorPickerVisible:false,\n    currentView:0,//0:show file drop,1: show loading,2:render animation\n    fetchError:false\n  }\n  \n  componentDidMount(){\n    initState = JSON.parse(JSON.stringify(this.state)) //for redo/undo and clear all \n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let url = params.get('src')\n    let demo = false\n    if(!url){\n        demo = true\n        url = 'https://assets5.lottiefiles.com/packages/lf20_nz20vA.json'\n    }\n   \n    this.setState({currentView:1})\n    fetch(url)\n    .then(async resp => {\n      //lottiefiles website returns plain text so get that first and parse\n      let body = await resp.text() \n      try{\n        \n        const res = JSON.parse(body)\n        \n        //check some properties to see if is a valid lottie json file..\n        //not meant to be foolproof -- just to catch mistakes\n        if('v' in res && 'ip' in res && 'op'){\n          if(demo){\n            this.initDemo(res)\n          }\n          else{\n            this.loadNewAnimation(res)\n          }\n        }\n        else{\n          this.setState({currentView:0,fetchError:true})\n        }\n        \n      }\n      catch(err){\n        this.setState({fetchError:true,currentView:0})\n      }\n    })\n    .catch(err =>  this.setState({fetchError:true,currentView:0}))\n   \n    document.addEventListener('mousedown', this.hideBackgroundColorPicker)\n    document.addEventListener(\"keydown\", this.keyboardControls, false)\n  }\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.keyboardControls, false)\n    document.removeEventListener('mousedown', this.hideBackgroundColorPicker);\n  }\n  setColors = () => {\n    const parsedColors = parseColors(toJS(this.props.Store.json),true)\n    this.setState({parsedColors: parsedColors})\n  }\n\n  toggleLayer = (id) => {\n    if(this.state.current_layer == id){\n      this.setState({layer_open:!this.state.layer_open})\n    }\n    else{\n      this.setState({current_layer:id,layer_open:true})\n    } \n  }\n\n  changeColor = (color,event) => {\n    if(!this.state.activeGroupId) return\n    const pickedColor = [color.rgb.r,color.rgb.g,color.rgb.b,1]\n    const colorGroup = this.state.parsedColors[this.state.rootLayerPath][this.state.activeGroupId]\n    let newData = null\n    let colorProps = {\n      items:colorGroup,\n      pickedColor:pickedColor\n    }\n    //undo/redo\n    const oldStateData = [this.state,toJS(this.props.Store.json)]\n    if(undoStack.length < 10){\n      undoStack.push(oldStateData)\n    }\n    else{\n      undoStack.shift()\n      undoStack.push(oldStateData)\n    }\n    redoStack = []\n    \n    if(this.state.keyFramed){\n      colorProps.type = \"keyed\"\n      colorProps.colorType = this.state.keyFramedColorType\n      colorProps.oldColorIndex = this.state.keyFramedColorIndex\n\n      if(this.state.isGradient){\n        colorProps.gradientStartIndex = this.state.gradientIndex\n        newData = assignNewGradientColor(toJS(this.props.Store.json),colorProps)\n      }\n      else{\n        newData = assignNewSolidColor(toJS(this.props.Store.json),colorProps)\n      }\n    }\n    else{\n        colorProps.type = null\n        if(this.state.isGradient){\n          colorProps.gradientStartIndex = this.state.gradientIndex\n          newData = assignNewGradientColor(toJS(this.props.Store.json),colorProps)\n        }\n        else{\n          newData = assignNewSolidColor(toJS(this.props.Store.json),colorProps)\n        }\n    }\n    \n    this.props.Store.setJson(newData.animation)\n    this.setState({\n      parsedColors:newData.colors,\n      activeGroupId:newData.key,\n      colorPickerBackground:pickedColor.join(),\n    }, \n      () => {\n        this.lottieRender()\n    })\n  }\n  setActiveColorKeyedSolids = (layerId,shapeId,colorObj,rootItemName,colorType) => {\n    this.setState({\n      rootLayerPath:layerId,\n      isGradient:false,\n      keyFramed:true,\n      keyFramedColorType:colorType,\n      activeGroupId:shapeId,\n      keyFramedColorIndex:colorObj.index,\n      rootItemName:rootItemName,\n      colorPickerBackground:colorObj[colorType]\n    },\n    //() => lottie.goToAndStop()\n    )\n  }\n  setActiveColorSolids = (colorProps) => { \n    this.setState({\n      rootLayerPath:colorProps.layerId,\n      activeGroupId:colorProps.shapeGroupId,\n      isGradient:false,\n      keyFramed:false,\n      rootItemName:colorProps.rootItemName,\n      colorPickerBackground:colorProps.color\n    }\n    )\n   \n  }\n  \n  setActiveColorKeyedGradient = (colorProps) => {\n    this.setState({\n      rootLayerPath:colorProps.layerId,\n      activeGroupId:colorProps.shapeGroupId,\n      isGradient:true,\n      keyFramed:true,\n      keyFramedColorIndex:colorProps.keyFramedColorIndex,\n      keyFramedColorType:colorProps.colorType,\n      gradientIndex:colorProps.gradientIndex,\n      rootItemName:colorProps.rootItemName,\n      colorPickerBackground:colorProps.gradient\n    })\n    \n  }\n  setActiveColorGradient = (layerId,shapeId,gradientColorI,rootItemName,gradientColorIndex) => {\n    this.setState({\n      rootLayerPath:layerId,\n      isGradient:true,\n      keyFramed:false,\n      activeGroupId:shapeId,\n      gradientIndex:gradientColorIndex,\n      rootItemName:rootItemName,\n      colorPickerBackground:gradientColorI\n    })\n  }\n  updateCurrentFrame = (e) =>{\n    this.setState({currentFrameTime:e.currentTime,totalTime:e.totalTime})\n  }\n\n  keyboardControls = (e)=>{\n    if(e.keyCode == 32) this.playPause()\n    else if(e.keyCode == 37 && this.state.currentFrameTime-1 >= 0) this.seekByArrowKeys(-1)\n    else if(e.keyCode == 39 && this.state.currentFrameTime+1 <= this.state.totalTime) this.seekByArrowKeys(1)\n    else if (e.keyCode == 90 && e.ctrlKey) this.undo()\n    else if (e.keyCode == 89 && e.ctrlKey) this.redo()\n  } \n\n  seekByMouseClick = (val) => {\n    lottie.goToAndStop(val.x,true)\n    if(!this.state.paused){\n      lottie.play()\n    }\n  }\n  seekByArrowKeys = (val) => {//seek using arrow keys or clicking on the track\n    let currentFrame = this.state.currentFrameTime + val\n    lottie.goToAndStop(currentFrame,true)\n    if(!this.state.paused){\n      lottie.play()\n    }\n  }\n  playPause = () => {\n    if(this.state.currentView != 2) return\n    let playButtonState = null\n    if(this.state.paused){\n      lottie.goToAndStop(this.state.currentFrameTime,true)\n      lottie.play()\n      playButtonState = false\n    }\n    else{\n      lottie.goToAndStop(this.state.currentFrameTime,true)\n      playButtonState = true\n    }\n    this.setState({paused:playButtonState})\n    \n  }\n  clearAllChanges = () => {\n    if(undoStack.length == 0) return\n    \n    this.props.Store.setJson(initAnimation)\n    redoStack = []\n    undoStack = []\n    this.setState(\n      {...initState,...{currentView:2}}\n      ,()=>{\n        this.setColors()\n        this.lottieRender()\n      }\n      )\n  }\n  undo = () => {//supports up to 10 levels\n    if(undoStack.length == 0) return\n    const prevAnimation = undoStack.pop()\n    redoStack.push(prevAnimation)\n    redoStack.push([this.state,toJS(this.props.Store.json)])\n    \n    this.props.Store.setJson(prevAnimation[1])\n    this.setState(\n      {...prevAnimation[0],...{animationPreviewBackgroundColor:this.state.animationPreviewBackgroundColor}}\n      ,()=>{\n        this.setColors()\n        this.lottieRender()\n      }\n    )\n   \n  }\n  redo = () => {//supports up to 10 levels\n    if(redoStack.length == 0) return\n    let current = redoStack.pop()\n    let undo = redoStack.pop()\n    undoStack.push(undo)\n    this.props.Store.setJson(current[1])\n    this.setState(\n      {...current[0],...{animationPreviewBackgroundColor:this.state.animationPreviewBackgroundColor}},\n      ()=>{\n        this.setColors()\n        this.lottieRender()\n      }\n    )\n  }\n  toggleBackgroundColorPicker = () => {\n    this.setState({backgroundColorPickerVisible:!this.state.backgroundColorPickerVisible})\n  }\n  changeBackgroundColor (color,e){\n    this.setState({\n      animationPreviewBackgroundColor:color.hex\n    })  \n  }\n  hideBackgroundColorPicker = (e) => {\n    if (this.wrapperRef && !this.wrapperRef.contains(e.target)) {\n      this.setState({backgroundColorPickerVisible:false})\n    }\n  }\n  setWrapperRef = (node) => {\n    this.wrapperRef = node\n  }\n  initDemo = (animation) =>{\n    initAnimation = animation\n    this.props.Store.setJson(animation)\n    this.setState({currentView:0})\n  }\n  \n  loadNewAnimation = (animation) => {\n    initAnimation = animation\n    this.props.Store.setJson(animation)\n    this.setState(\n      {currentView:2,fetchError:false},\n      ()=>{\n        undoStack = []\n        redoStack = []\n        this.setColors()\n        this.lottieRender()\n      }\n      )\n    \n  }\n  parseAndLoadNewAnimation = (e) => {\n    const newAnimation = JSON.parse(e.target.result)\n    this.loadNewAnimation(newAnimation)\n  }\n\n  handleFileDrop = (files,e) => {\n    const reader = new FileReader()\n    reader.onload = this.parseAndLoadNewAnimation;\n    reader.readAsText(files[0])\n  }\n\n  downloadFile = ()=>{\n    if(this.state.currentView != 2) return  \n    const data = toJS(this.props.Store.json)\n    const blob = new Blob([JSON.stringify(data)])\n    saveAs(blob,data.nm+'.json')\n  }\n  switchEditMode = () => {\n    this.setState(\n     {currentView:2,fetchError:false},\n      () => {\n        this.setColors()\n        this.lottieRender()\n      }\n    )\n   \n  }\n  \n//----------renders----------------------------\n//---------------------------------------\n  backgroundColorPicker(){\n    if(this.state.backgroundColorPickerVisible){\n      return (\n        <div ref={this.setWrapperRef}>\n        <div className=\"background-color-picker\">\n        <ChromePicker\n          color={this.state.animationPreviewBackgroundColor}\n          onChange={(e) => this.changeBackgroundColor(e)}\n        /> \n        </div>\n        </div>\n      )\n    }\n    return \"\"\n  }\n\n  buildKeyedSolidsList = (items,key) => {\n    let rootItemName = items[1].itemName.split('->')[0].trim()\n    let expand = true\n    if(expand){\n      return (\n        <div style={{background: 'rgba(0, 0, 0, 0.09)'}}>\n          <div style={{padding:'8px 0 8px 30px',borderBottom:'1px solid rgba(0,0,0,.05)',borderTop:'1px solid rgba(0,0,0,.05)'}}><MdKeyboardArrowDown/> {items[0] + ' -> ' + rootItemName} <MdVpnKey size={13}/></div>\n          <ul>\n            {\n              items[1].color.map(v =>\n                <li>\n                  <div onClick={() => {this.setState({paused:true});lottie.goToAndStop(v.time+1,true)}} style={{padding:'5px 0 5px 50px',borderBottom:'1px solid #ddd'}}> <MdKeyboardArrowDown/> t = {v.time + 1}</div>\n                {\n                 \n                  <ul>\n                    <li onClick={() => this.setActiveColorKeyedSolids(items[1].layerId,key,v,rootItemName,'start')} style={{fontSize:12,padding:5,marginLeft:100,background:'rgba('+v.start.join()+')'}}>Start color</li>\n                    <li onClick={() => this.setActiveColorKeyedSolids(items[1].layerId,key,v,rootItemName,'end')} style={{fontSize:12,padding:5,marginLeft:100,background:v.end[3] == 0? '#fff': 'rgba('+v.end.join()+')'}}>End color</li>\n                  </ul>\n                }\n                </li>  \n              )\n            }\n          </ul>\n        </div>\n      )\n    }\n    return (\n      <div>{items[0]}</div>\n    )\n  }\n\n  buildKeyedGradientListColorList = (colorProps,color_type,gradient_colors) => {\n    const gradients = this.groupGradient(gradient_colors)\n    return (\n      <ul>\n        {gradients.map((gradient,i)=>\n            <li \n              onClick={() => this.setActiveColorKeyedGradient({\n                  rootItemName:colorProps.rootItemName,\n                  gradientIndex:i,\n                  gradient:gradient,\n                  layerId:colorProps.layerId,\n                  shapeGroupId:colorProps.shapeGroupId,\n                  colorType:color_type,\n                  keyFramedColorIndex:colorProps.keyFramedColorIndex\n                })} \n              style={{padding:8,marginLeft:20,background:'rgba('+gradient.map((v,i)=>i==3?1:v).join()+')'}}\n            >\n              Gradient  {i+1}\n            </li>\n        \n        )}\n      </ul>\n    )\n  }\n\n  buildKeyedGradientList = (item,key) => {\n    let rootItemName = item[1].itemName.split('->')[0].trim()\n    let expand = true\n\n    if(expand){\n      return (\n        <div style={{background: 'rgba(0, 0, 0, 0.09)'}}>\n          <div style={{padding:'8px 0 8px 30px',borderBottom:'1px solid rgba(0,0,0,.05)',borderTop:'1px solid rgba(0,0,0,.05)'}}><MdKeyboardArrowDown/> {item[0] + ' -> ' + rootItemName} <MdVpnKey size={13}/></div>\n          <ul>\n            {\n              item[1].color.map((v,i) => {\n                return (\n                  <li>\n                    <div onClick={() => lottie.goToAndStop(v.time+1,true)} style={{padding:'5px 0 5px 50px',borderBottom:'1px solid #ddd'}}> <MdKeyboardArrowDown/> t = {v.time + 1}</div>\n                  {\n                  \n                    <ul>\n                      <li style={{fontSize:12,padding:5,marginLeft:60,}}>\n                      <div style={{padding:10}}><MdKeyboardArrowDown/> Start color</div>\n                      {\n                        this.buildKeyedGradientListColorList({\n                          rootItemName: rootItemName,\n                          layerId: item[1].layerId,\n                          shapeGroupId:key,\n                          keyFramedColorIndex:i\n                        },'start',v.start)\n                      }\n                      </li>\n                      <li style={{fontSize:12,padding:5,marginLeft:60,}}>\n                      <MdKeyboardArrowDown/> End color\n                      {this.buildKeyedGradientListColorList({\n                        rootItemName: rootItemName,\n                        layerId: item[1].layerId,\n                        shapeGroupId:key,\n                        keyFramedColorIndex:i\n                      },'end',v.end)}\n                      </li>\n                    </ul>\n                  }\n                  </li>  \n                )}\n              )\n            }\n          </ul>\n        </div>\n      )\n    }\n    return (\n      <div>{item[0]}</div>\n    )\n  }\n  groupGradient = (arr) => {\n    let gradients = [];\n    arr.forEach((e,i) => {\n      const last = gradients[gradients.length - 1];\n      if (!last || last.length === 4) {\n        gradients.push([e]);\n      } else {\n        last.push(e);\n      }\n    }); \n    return gradients\n  }\n  buildGradientList = (item,key) => {\n    let rootItemName = item[1].itemName.split('->')[0].trim()\n    let gradients = this.groupGradient(item[1].color)\n    \n    return (\n      <div>\n        <div style={{padding:'8px 0 8px 40px'}}>{item[0]}</div>\n        <ul>\n          {gradients.map((gradient,i) => \n            <li onClick={()=> this.setActiveColorGradient(item[1].layerId,key,gradient,rootItemName,i)} style={{padding:5,marginLeft:60,background:'rgba('+gradient.join()+')'}}>\n              Gradient {i+1}\n            </li>\n            )}\n        </ul>\n      </div>\n    )\n  }\n  \n  buildSolidsList = (item,shapeId) => {\n    let rootItemName = item[1].itemName.split('->')[0].trim()\n    return (\n      <div style={{background:'rgba(0,0,0,.10)'}}>\n      <ul>\n        <li\n          key={shapeId}\n        onClick={() => this.setActiveColorSolids(\n          {\n            rootItemName:rootItemName,\n            layerId:item[1].layerId,\n            shapeGroupId:shapeId,\n            color:item[1].color\n          }\n          )}  \n        style={{fontSize:12,marginLeft:30,padding:5,background:'rgba('+item[1].color.join()+')'}}>{item[0] +' -> '+ rootItemName}</li>\n      </ul>\n      </div>\n    )\n  }\n\n  buildShapesList = (layer,layerId) => {\n    let shapes = Object.keys(layer).filter(key=> key != \"layerName\")\n   \n    if(this.state.current_layer == layerId && this.state.layer_open){\n        return (\n          <div>\n            <div onClick={() => this.toggleLayer(layerId)} className=\"layerRoot\">\n            <div><span className=\"playArrowDown\"><MdPlayArrow  size={15}/></span> {layer.layerName}</div>\n            </div>\n          <ul>\n            {\n              shapes.map((key,i) => {\n                if(layer[key][1].keyFramed){\n                  if(layer[key][1].type == 'gf' || layer[key][1].type == 'gs'){\n                    return this.buildKeyedGradientList(layer[key],key)\n                  }\n                  else{\n                    return this.buildKeyedSolidsList(layer[key],key)\n                  }\n                }\n                else{\n                  if(layer[key][1].type == 'gf' || layer[key][1].type == 'gs'){\n                    return this.buildGradientList(layer[key],key)\n                  }\n                  else{\n                    return this.buildSolidsList(layer[key],key)\n                  }\n                }\n\n              })\n            }\n          </ul>\n          </div>\n        )\n    }\n    return (\n      <div onClick={() => this.toggleLayer(layerId)} className=\"layerRoot\">\n            <div><MdPlayArrow size={15}/> {layer.layerName}</div>\n            </div>\n    )\n  }\n\n  renderParsedColors = () =>{\n    \n    if(this.state.parsedColors == null) return null\n    \n    let layers = Object.keys(this.state.parsedColors).reverse();\n    //console.log(layers)\n    return (\n      <Scrollbars\n      autoHide\n      autoHideTimeout={1000}\n      autoHideDuration={200}\n       \n       className=\"parsedColorsWrapper\" >\n      <div >\n        <ul>\n          {\n            layers.map((key,i)=>\n              <li key={this.state.parsedColors[key].layerName} className=\"parsedColorItem\">\n                {this.buildShapesList(this.state.parsedColors[key],i)}\n              </li>\n              )\n          }\n        </ul>\n      </div>\n      </Scrollbars>\n    )\n  }\n\n  lottieRender = () => {\n    lottie.destroy()\n\n    let animation = lottie.loadAnimation({\n      container: document.getElementById(\"preview\"), \n      renderer: \"svg\",\n      loop: true,\n      autoplay:true,\n      animationData: toJS(this.props.Store.json),\n    });\n    if(this.state.paused) animation.goToAndStop(this.state.currentFrameTime,true)\n    animation.addEventListener('enterFrame',this.updateCurrentFrame)\n    \n  }\n\n  renderAnimation(){\n    if(this.state.currentView == 2){\n      return (\n        <div ref={this.animationRef} id=\"preview\"/>\n      )\n    }\n    else if(this.state.currentView == 1){\n      return (\n        <div>\n          Loading...\n        </div>\n      )\n    }\n    return (\n      <div className=\"drop-files-wrapper\">\n          <p>Drag and drop lottie files here or </p><br/><br/>\n          <div onClick={() => this.switchEditMode()} className=\"button\">\n          Edit demo\n         \n          <span><MdEdit/></span>\n        </div>\n      </div>\n    )\n  }\n  showFetchError = ()=>{\n    if(this.state.fetchError) {\n      return (\n        <div className=\"fetch-error\"><span>Couldn't fetch json data from provided url. Drag and drop the file above</span></div>\n      )\n    }\n  }\n  render() {\n  return (\n    \n    <div className=\"main\">\n      <div className=\"sidebarWrapper\">\n      <div className=\"colorPicker\">\n          <ChromePicker  \n            color={ 'rgba('+this.state.colorPickerBackground+')'}\n            onChangeComplete={this.changeColor} \n            styles={sketchPickerStyles}\n          />\n         \n        </div>\n       \n        {this.renderParsedColors()}\n\n      </div>\n      <div className=\"previewWrapper\">\n        <a target=\"_blank\" href=\"https://github.com/magna25/lottie-editor\" id=\"github-link\"> <p><FaGithub/></p> <p>v1.0.1</p></a>\n\n        <div className=\"previewContainer\"  style={{background:this.state.animationPreviewBackgroundColor}}>\n            <FileDrop onDrop={this.handleFileDrop}>\n            {this.renderAnimation()}\n            </FileDrop>\n        </div>\n      \n        \n        <div className=\"previewControls\">\n          {this.showFetchError()}\n          <div className=\"controls\" style={{padding:20}}>\n            <div><MdFileDownload onClick={() => this.downloadFile()} color={this.state.currentView != 2?'gray':'#000'} title=\"Download\" size={25}/></div>\n            <div onClick={() => this.clearAllChanges()}><MdClearAll color={undoStack.length == 0?'gray':'#000'} title=\"Clear All\" size={25}/></div>\n            <div onClick={() => this.undo()}><MdUndo color={undoStack.length == 0?'gray':'#000'}title=\"Undo\" size={30}/></div>\n            <div onClick={() => this.redo()}><MdRedo color={redoStack.length == 0?'gray':'#000'} title=\"Redo\" size={30}/></div>\n            <div onClick={() => this.playPause()}>{!this.state.paused ? <MdPause color={this.state.currentView != 2?'gray':'#000'} title=\"Pause\" size={30}/> : <MdPlayArrow color={this.state.currentView != 2?'gray':'#000'} title=\"Play\" size={30}/>}</div>\n            <div>\n              <div>{this.state.currentFrameTime < 10? '0'+Math.round(this.state.currentFrameTime):Math.round(this.state.currentFrameTime)}/{this.state.totalTime}</div>\n              <div className=\"controls-slider\">\n                <Slider\n                  styles={{\n                    track: {\n                      width:'100%',\n                    },\n                    active: {\n                      backgroundColor: 'gray'\n                    },\n                  }}\n                  y\n                  xmax={this.state.totalTime}\n                  x = {this.state.currentFrameTime}\n                  onChange={this.seekByMouseClick}\n                />\n              </div>\n            </div>\n            <div style={{background:this.state.animationPreviewBackgroundColor}} onClick={() => this.toggleBackgroundColorPicker()}> BG</div>\n          </div>\n          {this.backgroundColorPicker()}\n        </div>\n        \n      </div>\n    </div>\n    \n  );\n  }\n}\n\nconst LottieEditor = inject('Store')(observer(Editor))\nexport default LottieEditor;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport {observable,decorate,action,configure} from 'mobx'\r\n\r\nconfigure({ enforceActions: \"observed\" }) //\r\n\r\nclass Store {\r\n    json = {}\r\n    setJson = (val) => {this.json = val}\r\n}\r\n\r\ndecorate(Store,{\r\n    json:observable,\r\n    setJson:action,\r\n    \r\n})\r\n\r\nexport default new Store()","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport LottieEditor from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'mobx-react';\r\nimport Store from './store'\r\n\r\nReactDOM.render(<Provider Store={Store}><LottieEditor /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}